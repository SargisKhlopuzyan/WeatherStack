apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "app.sargis.khlopuzyan.weatherstack"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        all {
            // read api_key from keys.properties file located in $project/app directory
            def props = new Properties()
            file("keys.properties").withInputStream { props.load(it) }
            buildConfigField 'String', "access_key", props.getProperty("access_key")
        }
    }

    dataBinding {
        enabled = true
    }
    compileOptions {
        targetCompatibility = 1.8
        sourceCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    dexOptions {
        javaMaxHeapSize "8g"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'

    implementation 'androidx.fragment:fragment-ktx:1.1.0'
    implementation 'androidx.activity:activity:1.1.0-rc03'
    implementation 'androidx.activity:activity-ktx:1.1.0-rc03'

    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-rc03'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-rc03'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-rc03'
    kapt 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'
    kapt 'androidx.lifecycle:lifecycle-common-java8:2.2.0-rc03'

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //Google
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "com.google.android.material:material:1.0.0"

    // Dagger
    implementation 'com.google.dagger:dagger:2.25.2'
    implementation 'com.google.dagger:dagger-android-support:2.25.2'
    implementation 'com.google.dagger:dagger-android:2.25.2'
    kapt 'com.google.dagger:dagger-compiler:2.25.2'
    kapt 'com.google.dagger:dagger-android-processor:2.25.2'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.7.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.7.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'

//    // Moshi
    implementation 'com.squareup.moshi:moshi:1.9.2'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.2'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'

    // Room
    implementation "androidx.room:room-runtime:2.2.3"
    kapt "androidx.room:room-compiler:2.2.3"

    //  Glide
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'

//    // Lottie
//    implementation 'com.airbnb.android:lottie:3.3.1'
}
