<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <import type="android.view.View" />

        <import type="app.sargis.khlopuzyan.weatherstack.util.StateMode" />

        <variable
            name="viewModel"
            type="app.sargis.khlopuzyan.weatherstack.ui.cachedweather.CachedWeatherViewModel" />

    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@android:color/white">

        <androidx.appcompat.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            android:background="?attr/colorPrimary"
            android:elevation="0dp"
            android:gravity="right"
            app:contentInsetEnd="0dp"
            app:contentInsetLeft="0dp"
            app:contentInsetRight="0dp"
            app:contentInsetStart="0dp"
            app:contentInsetStartWithNavigation="0dp"
            app:expandedTitleMarginStart="0dp"
            app:layout_constraintTop_toTopOf="parent"
            app:navigationIcon="@{viewModel.stateModeLiveData == StateMode.Normal ? @drawable/ic_search : @drawable/ic_clear}">

            <androidx.constraintlayout.widget.ConstraintLayout
                android:layout_width="match_parent"
                android:layout_height="match_parent">

                <TextView
                    android:id="@+id/textViewSelected"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginRight="8dp"
                    android:gravity="center"
                    android:text="@string/selected"
                    android:visibility="@{viewModel.stateModeLiveData == StateMode.Normal ? View.GONE : View.VISIBLE}"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintHorizontal_chainStyle="packed"
                    app:layout_constraintLeft_toLeftOf="parent"
                    app:layout_constraintRight_toLeftOf="@+id/textViewSelectedItemsCount"
                    app:layout_constraintTop_toTopOf="parent" />

                <TextView
                    android:id="@+id/textViewSelectedItemsCount"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginRight="24dp"
                    android:background="@drawable/shape_circle"
                    android:gravity="center"
                    android:minWidth="0dp"
                    android:minHeight="0dp"
                    android:text="12"
                    android:visibility="@{viewModel.stateModeLiveData == StateMode.Normal ? View.GONE : View.VISIBLE}"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintHorizontal_chainStyle="packed"
                    app:layout_constraintLeft_toRightOf="@+id/textViewSelected"
                    app:layout_constraintRight_toRightOf="parent"
                    app:layout_constraintTop_toTopOf="parent" />

                <Button
                    android:id="@+id/buttonToolbarEdit"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginRight="@dimen/main_screen_padding_vertical"
                    android:minWidth="@dimen/navigation_button_width"
                    android:minHeight="0dp"
                    android:onClick="@{(v) -> viewModel.onEditClick(v)}"
                    android:text="@string/edit"
                    android:textAllCaps="false"
                    android:visibility="@{viewModel.stateModeLiveData == StateMode.Normal ? View.VISIBLE : View.GONE}"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintRight_toRightOf="parent"
                    app:layout_constraintTop_toTopOf="parent" />

            </androidx.constraintlayout.widget.ConstraintLayout>

        </androidx.appcompat.widget.Toolbar>

        <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
            android:id="@+id/swipeRefreshLayout"
            android:layout_width="match_parent"
            android:layout_height="0dp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/toolbar"
            app:refreshing="@{viewModel.isRefreshingLiveData}"
            app:setOnRefreshListener="@{viewModel.refreshListener}">

            <androidx.recyclerview.widget.RecyclerView
                android:id="@+id/recyclerView"
                android:layout_width="match_parent"
                android:layout_height="0dp"
                android:fillViewport="true"
                app:data="@{viewModel.cachedWeathersLiveData}"
                app:layout_behavior="@string/appbar_scrolling_view_behavior" />

        </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>

        <androidx.cardview.widget.CardView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginBottom="24dp"
            android:visibility="@{viewModel.stateModeLiveData != StateMode.Normal ? View.VISIBLE : View.GONE}"
            app:cardCornerRadius="20dp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent">

            <LinearLayout
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:background="@drawable/shape_card_view"
                android:paddingHorizontal="36dp"
                android:paddingVertical="4dp">

                <Button
                    android:id="@+id/buttonDelete"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginRight="36dp"
                    android:background="@android:color/transparent"
                    android:drawableTop="@drawable/selector_trash"
                    android:enabled="@{viewModel.isDeleteActiveLiveData()}"
                    android:minWidth="60dp"
                    android:minHeight="0dp"
                    android:onClick="@{(v) -> viewModel.onDeleteClick(v)}"
                    android:state_selected="true"
                    android:text="@string/delete"
                    android:textAllCaps="false"
                    android:textSize="8sp"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintEnd_toStartOf="@+id/buttonSelectAll"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toTopOf="parent" />

                <Button
                    android:id="@+id/buttonSelectAll"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:background="@android:color/transparent"
                    android:drawableTop="@{viewModel.isAllSelectedLiveData() ? @drawable/selector_check_all_selected : @drawable/selector_check}"
                    android:minWidth="60dp"
                    android:minHeight="0dp"
                    android:onClick="@{(v) -> viewModel.onSelectAllClick(v)}"
                    android:state_selected="true"
                    android:text="@{viewModel.isAllSelectedLiveData() ? @string/deselect_all : @string/select_all}"
                    android:textAllCaps="false"
                    android:textSize="8sp"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintStart_toEndOf="@+id/buttonDelete"
                    app:layout_constraintTop_toTopOf="parent"
                    tools:drawableTop="@drawable/selector_check"
                    tools:text="@string/select_all" />

            </LinearLayout>

        </androidx.cardview.widget.CardView>

    </androidx.constraintlayout.widget.ConstraintLayout>

</layout>